# Определяет группу серверов (backend-серверов), к которым будут маршрутизироваться запросы
upstream api {
    # Указывает, что сервер с именем backend на порту 5000 является частью группы api
    server backend:5000;
}

# Определяет блок конфигурации для виртуального сервера
server {
    # Указывает, что сервер будет слушать порт 80 для IPv4
    listen 80;
    # Указывает, что сервер будет слушать порт 80 для IPv6
    listen [::]:80;
    # Устанавливает максимальный размер тела запроса клиента на 10Mb
    client_max_body_size 10m;

    # Определяет конфигурацию для запросов к корневому URL
    location / {
        # Указывает корневую директорию для статических файлов
        root /var/www;
        # Указывает файл по умолчанию для запроса к директории
        index index.html;
        # Пытается найти запрашиваемый URI как файл или директорию.
        # Если не удается, возвращает /index.html.
        # Это часто используется для SPA (Single Page Applications),
        # чтобы все запросы маршрутизировались на единую точку входа.
        try_files $uri $uri/ /index.html;
    }

    # Определяет конфигурацию для запросов, начинающихся с /api/
    location /api/ {
        # Перезаписывает URL, удаляя префикс /api/
        rewrite ^/api/(.*)$ /$1 break;
        # Перенаправляет запросы к группе серверов api, определенной в блоке upstream
        proxy_pass http://api;
    }

    # Определяет конфигурацию для запросов, начинающихся с /media/
    location /media/ {
        # Перезаписывает URL, удаляя префикс /media/
        rewrite ^/media/(.*)$ /$1 break;
        # Указывает корневую директорию для файлов медиа
        root /upload;
    }

    # Указывает файл, который будет использоваться для отображения страниц ошибок с кодами 500, 502, 503 и 504
    error_page   500 502 503 504  /50x.html;

    # Определяет конфигурацию для точного запроса к /50x.html
    location = /50x.html {
        # Указывает корневую директорию для этого файла
        root   /usr/share/nginx/html;
    }
}